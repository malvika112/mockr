from __future__ import annotations

<<<<<<< HEAD
from typing import Literal, Union, overload
=======
from typing import Literal, Optional, Union, overload
>>>>>>> 5810eeea8f405bf23b88d0a3cf145ea468167fc9

from ._async.functions_client import AsyncFunctionsClient
from ._sync.functions_client import SyncFunctionsClient
from .utils import FunctionRegion

<<<<<<< HEAD
__all__ = [
    "create_client",
    "FunctionRegion",
    "AsyncFunctionsClient",
    "SyncFunctionsClient",
]
=======
__all__ = ["create_client"]
>>>>>>> 5810eeea8f405bf23b88d0a3cf145ea468167fc9


@overload
def create_client(
    url: str, headers: dict[str, str], *, is_async: Literal[True], verify: bool
) -> AsyncFunctionsClient: ...


@overload
def create_client(
    url: str, headers: dict[str, str], *, is_async: Literal[False], verify: bool
) -> SyncFunctionsClient: ...


def create_client(
    url: str,
    headers: dict[str, str],
    *,
    is_async: bool,
    verify: bool = True,
) -> Union[AsyncFunctionsClient, SyncFunctionsClient]:
    if is_async:
        return AsyncFunctionsClient(url, headers, verify)
    else:
        return SyncFunctionsClient(url, headers, verify)
